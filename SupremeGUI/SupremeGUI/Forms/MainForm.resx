<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>